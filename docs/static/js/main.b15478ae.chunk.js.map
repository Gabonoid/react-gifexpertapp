{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldCategoria","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAY,OAAKP,GAAL,mBAAoBO,OAC/CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCaLO,EAXK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG7B,OAFAc,QAAQC,IAAIL,EAAOV,GAGlB,sBAAKgB,UAAU,2DAAf,UACC,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCcQS,EAlBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACfd,mBAAS,CAClCqB,KAAM,GACNe,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WACT1B,EAAQC,GACD0B,MAAK,SAACC,GACXH,EAAS,CACRjB,KAAMoB,EACNL,SAAS,SAIV,CAACtB,IAEGuB,EDd2BK,CAAa5B,GAAlC6B,EAFoB,EAE1BtB,KAAgBe,EAFU,EAEVA,QAGvB,OAFAN,QAAQC,IAAIK,GAGX,qCACC,6BAAKtB,IACJsB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACEW,EAASpB,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEQZmB,EAnBM,WAAO,IAAD,EACU5C,mBAAS,CAAC,wBADpB,mBACnB6C,EADmB,KACP9C,EADO,KAG1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BACE8C,EAAWtB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTnBgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.b15478ae.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias( oldCategoria => [inputValue, ...oldCategoria ]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fnvZDqwxwsDkTvWAQQQYXCjJJSDuB87r`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\tconsole.log(title, url);\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__bounce animate__fadeInUp\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\tconst {data: imagenes, loading} = useFetchGifs(category);\r\n\tconsole.log(loading);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && <p>Loading...</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{imagenes.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category)\r\n        .then((imgs) => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n            \r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory.js\";\r\nimport GifGrid from \"./components/GifGrid.js\";\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categorias, setCategorias] = useState([\"The legend of zelda\"]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategorias={setCategorias} />\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categorias.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp.js\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}